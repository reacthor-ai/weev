datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  relationMode      = "prisma"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PromptType {
  PRODUCT_IMAGE
  PRODUCT_TEXT
  BRAND_TEXT
}

enum ImageType {
  PROMPT_IMAGE
  GENERAL_IMAGE
}

enum Status {
  IN_PROGRESS
  DONE
  PENDING
}

model User {
  id           String         @id @default(cuid())
  name         String
  clerkId      String         @unique
  organization Organization[]
  tracking     Tracking[]
}

model Organization {
  id         String       @id @default(cuid())
  title      String       @db.VarChar(200)
  project    Project[]
  brandVoice BrandVoice[]
  user       User?        @relation(fields: [userId], references: [id])
  userId     String?
}

model BrandVoice {
  id             String        @id @default(cuid())
  type           String
  title          String        @db.VarChar(300)
  description    String        @db.VarChar(600)
  link           String
  prompt         Prompt[]
  product        Product[]
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}

model Prompt {
  id           String      @id @default(cuid())
  type         PromptType
  text         String      @db.VarChar(600)
  brandVoice   BrandVoice? @relation(fields: [brandVoiceId], references: [id])
  brandVoiceId String?
  product      Product?    @relation(fields: [productId], references: [id])
  productId    String?
  image        Image?      @relation(fields: [imageId], references: [id])
  imageId      String?
}

model Project {
  id             String        @id @default(cuid())
  title          String
  description    String
  product        Product[]
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
}

model Product {
  id           String     @id @default(cuid())
  title        String?
  description  String?
  prompt       Prompt[]
  image        Image[]
  status       Status
  brandVoice   BrandVoice @relation(fields: [brandVoiceId], references: [id])
  brandVoiceId String
  project      Project?   @relation(fields: [projectId], references: [id])
  projectId    String?
}

model Image {
  id          String    @id @default(cuid())
  src         String
  default     Boolean
  type        ImageType
  prompt      Prompt[]
  description String?
  product     Product?  @relation(fields: [productId], references: [id])
  productId   String?
}

model Tracking {
  id         String  @id @default(cuid())
  title      String
  wordCount  String
  imageCount String
  user       User?   @relation(fields: [userId], references: [id])
  userId     String?
}
